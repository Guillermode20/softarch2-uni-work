@startuml InterServiceCommunicationPatterns
!theme plain
skinparam ClassAttributeIconSize 0
skinparam roundcorner 10
skinparam sequenceMessageAlign center
skinparam DefaultFontName "Arial"
skinparam DefaultFontSize 12
skinparam shadowing false
title High-Level Inter-Service Communication Patterns

' ===== Participants =====
participant Frontend <<Frontend>>
participant APIGateway <<Microservice>>
participant AuthService <<Microservice>>
participant UserProfileService <<Microservice>>
participant ConferenceMetadataService <<Microservice>>
participant ConferenceDataService <<Microservice>>
participant UserNotesService <<Microservice>>
participant AdminService <<Microservice>>
participant EventBus <<Infrastructure>>
participant AnalyticsService <<Microservice>>

' ===== Standard User Flow =====
' == Standard User Flow ==
' Using single quote comments for sections as per style guide
' ===== Standard User Flow =====

Frontend -> APIGateway : HTTPS Request (e.g., getSchedule(), getNote())
note right of APIGateway : Single Entry Point

activate APIGateway
APIGateway -> AuthService : 1. validateToken() (Sync Call)
activate AuthService
AuthService --> APIGateway : User Context / Validation Result
deactivate AuthService

APIGateway -> ConferenceMetadataService : 2. getConferenceInfo() (e.g., Endpoint) (Sync Call)
activate ConferenceMetadataService
ConferenceMetadataService --> APIGateway : Metadata / Endpoint
deactivate ConferenceMetadataService

APIGateway -> ConferenceDataService : 3. requestConferenceData() (Sync Call)
activate ConferenceDataService
ConferenceDataService --> APIGateway : Schedule / Content Data
deactivate ConferenceDataService

APIGateway -> UserNotesService : 4. requestOrManageNotes() (Sync Call)
activate UserNotesService
UserNotesService --> APIGateway : Notes Data / Confirmation
deactivate UserNotesService

' Note: Gateway might also call UserProfileService, etc. depending on request

APIGateway --> Frontend : Aggregated Response
deactivate APIGateway

' ===== Administration Flow =====
' == Administration Flow ==
' Using single quote comments for sections as per style guide
' ===== Administration Flow =====

' Admin interactions typically also go via API Gateway, but show logical need here
AdminService -> ConferenceMetadataService : manageConferences() (Add/Update) (Sync Call)
note left of AdminService : Admin actions often\nmediated by APIGateway
activate ConferenceMetadataService
ConferenceMetadataService --> AdminService : Confirmation
deactivate ConferenceMetadataService

' ===== Asynchronous Analytics Events =====
' == Asynchronous Analytics Events ==
' Using single quote comments for sections as per style guide
' ===== Asynchronous Analytics Events =====

note over EventBus : Decouples event producers & consumers

APIGateway ->> EventBus : publishEvent(UserActivityEvent)
ConferenceDataService ->> EventBus : publishEvent(DataAccessEvent)
AuthService ->> EventBus : publishEvent(LoginMAUEvent)
UserNotesService ->> EventBus : publishEvent(NoteInteractionEvent)
' Other services might also publish events

EventBus ->> AnalyticsService : Deliver Events (Async)
activate AnalyticsService
AnalyticsService -> AnalyticsService : Process & Store Events
deactivate AnalyticsService
@enduml
